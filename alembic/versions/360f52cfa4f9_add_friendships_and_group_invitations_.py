"""Add friendships and group_invitations tables

Revision ID: 360f52cfa4f9
Revises: 5c2da3ea7eb0
Create Date: 2025-06-06 22:58:20.028307

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '360f52cfa4f9'
down_revision: Union[str, None] = '5c2da3ea7eb0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friendships',
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('addressee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', name='friendshipstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('requester_id < addressee_id', name='check_friendship_order'),
    sa.ForeignKeyConstraint(['addressee_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requester_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('requester_id', 'addressee_id'),
    sa.UniqueConstraint('requester_id', 'addressee_id', name='uq_friendship')
    )
    op.create_table('group_invitations',
    sa.Column('invitation_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'declined', name='groupinvitationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['users_groups.group_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('invitation_id'),
    sa.UniqueConstraint('group_id', 'invitee_id', name='uq_group_invitation')
    )
    op.create_index(op.f('ix_group_invitations_invitation_id'), 'group_invitations', ['invitation_id'], unique=False)
    op.alter_column('transactions', 'category_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_constraint('transactions_ibfk_1', 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'transaction_categories', ['category_id'], ['category_id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key('transactions_ibfk_1', 'transactions', 'transaction_categories', ['category_id'], ['category_id'], ondelete='RESTRICT')
    op.alter_column('transactions', 'category_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_group_invitations_invitation_id'), table_name='group_invitations')
    op.drop_table('group_invitations')
    op.drop_table('friendships')
    # ### end Alembic commands ###
