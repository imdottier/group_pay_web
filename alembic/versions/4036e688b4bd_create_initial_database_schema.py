"""Create initial database schema

Revision ID: 4036e688b4bd
Revises: 
Create Date: 2025-04-22 00:06:43.361374

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4036e688b4bd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('google_id', name='uq_google_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('users_groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_index(op.f('ix_users_groups_group_id'), 'users_groups', ['group_id'], unique=False)
    op.create_index(op.f('ix_users_groups_group_name'), 'users_groups', ['group_name'], unique=False)
    op.create_table('bills',
    sa.Column('bill_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('split_method', sa.Enum('item', 'percentage', 'equal', name='splitmethod'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['group_id'], ['users_groups.group_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('bill_id')
    )
    op.create_index(op.f('ix_bills_bill_id'), 'bills', ['bill_id'], unique=False)
    op.create_table('group_members',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('owner', 'member', name='grouprole'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['users_groups.group_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'user_id'),
    sa.UniqueConstraint('group_id', 'user_id', name='uq_group_user')
    )
    op.create_table('transaction_categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_category_name')
    )
    op.create_index(op.f('ix_transaction_categories_user_id'), 'transaction_categories', ['user_id'], unique=False)
    op.create_table('bill_items',
    sa.Column('bill_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.CheckConstraint('quantity > 0', name='check_quantity_positive'),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.bill_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('bill_id', 'item_id')
    )
    op.create_table('payments',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('payer_id', sa.Integer(), nullable=True),
    sa.Column('payee_id', sa.Integer(), nullable=True),
    sa.Column('bill_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.bill_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['group_id'], ['users_groups.group_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['payee_id'], ['users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['payer_id'], ['users.user_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('amount > 0', name='check_transaction_amount_positive'),
    sa.ForeignKeyConstraint(['category_id'], ['transaction_categories.category_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    op.create_table('bill_item_split',
    sa.Column('bill_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.CheckConstraint('quantity > 0', name='check_split_quantity_positive'),
    sa.ForeignKeyConstraint(['bill_id', 'item_id'], ['bill_items.bill_id', 'bill_items.item_id'], name='fk_bill_item_split_item', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('bill_id', 'item_id', 'user_id')
    )
    op.create_table('bill_part',
    sa.Column('bill_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.CheckConstraint('percentage >= 0 AND percentage <= 100', name='check_percentage_range'),
    sa.ForeignKeyConstraint(['bill_id'], ['bill_items.bill_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('bill_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bill_part')
    op.drop_table('bill_item_split')
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('payments')
    op.drop_table('bill_items')
    op.drop_index(op.f('ix_transaction_categories_user_id'), table_name='transaction_categories')
    op.drop_table('transaction_categories')
    op.drop_table('group_members')
    op.drop_index(op.f('ix_bills_bill_id'), table_name='bills')
    op.drop_table('bills')
    op.drop_index(op.f('ix_users_groups_group_name'), table_name='users_groups')
    op.drop_index(op.f('ix_users_groups_group_id'), table_name='users_groups')
    op.drop_table('users_groups')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
